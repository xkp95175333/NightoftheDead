// BlueprintGeneratedClass BP_Antize.BP_Antize_C
// Size: 0x28 (Inherited: 0x28)
struct UBP_Antize_C : UBlueprintFunctionLibrary {

	void ChangeLocalizationCulture(struct FString LocalizationCulture, struct UObject* __WorldContext); // Function BP_Antize.BP_Antize_C.ChangeLocalizationCulture // (Static|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void DuplicateSaveGame(struct UBP_MySaveGame_C* SaveGameObject, struct UObject* __WorldContext); // Function BP_Antize.BP_Antize_C.DuplicateSaveGame // (Static|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void DeleteSavedGame(struct FString SlotName, struct UObject* __WorldContext); // Function BP_Antize.BP_Antize_C.DeleteSavedGame // (Static|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void GetDateTimeText(struct FDateTime InDateTime, struct UObject* __WorldContext, struct FText DateTime); // Function BP_Antize.BP_Antize_C.GetDateTimeText // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1395fe0
	void GetAllSaveGame(struct UObject* __WorldContext, struct TArray<struct UBP_MySaveGame_C*> GamesSave); // Function BP_Antize.BP_Antize_C.GetAllSaveGame // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void LoadSlot(struct FString SlotName, struct UObject* __WorldContext, struct UBP_MySaveGame_C* SaveGameObject); // Function BP_Antize.BP_Antize_C.LoadSlot // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void SaveGame(struct UBP_MySaveGame_C* SaveGameObject, struct UObject* __WorldContext); // Function BP_Antize.BP_Antize_C.SaveGame // (Static|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void GetAllSaveGameSlot(struct UObject* __WorldContext, struct TArray<struct FString> SlotsName); // Function BP_Antize.BP_Antize_C.GetAllSaveGameSlot // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void CreateNewGame(struct UObject* __WorldContext, struct UBP_MySaveGame_C* SaveGameObject, struct FString SlotName); // Function BP_Antize.BP_Antize_C.CreateNewGame // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void RebindAxisMapping(struct FInputAxisKeyMapping OldMappingData, struct FInputAxisKeyMapping NewMappingData, struct UObject* __WorldContext, bool Success?); // Function BP_Antize.BP_Antize_C.RebindAxisMapping // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void RemoveAxisMapping(struct FInputAxisKeyMapping MappingData, struct UObject* __WorldContext, bool Success?); // Function BP_Antize.BP_Antize_C.RemoveAxisMapping // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void CompareAxisMappings(struct FInputAxisKeyMapping AxisOne, struct FInputAxisKeyMapping AxisTwo, struct UObject* __WorldContext, bool Same?); // Function BP_Antize.BP_Antize_C.CompareAxisMappings // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1395fe0
	void CheckAxisMappingExist(struct FInputAxisKeyMapping MappingData, struct UObject* __WorldContext, bool Exist?); // Function BP_Antize.BP_Antize_C.CheckAxisMappingExist // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void CreateNewAxisMapping(struct FInputAxisKeyMapping MappingData, struct UObject* __WorldContext, bool Success?); // Function BP_Antize.BP_Antize_C.CreateNewAxisMapping // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void RefreshMappingsAxisArray(struct FName MappingName, struct TArray<struct FInputAxisKeyMapping> MappingsArray, struct UObject* __WorldContext); // Function BP_Antize.BP_Antize_C.RefreshMappingsAxisArray // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void AxisAlreadyThisKeyArray(struct FName MappingName, struct TArray<struct FInputAxisKeyMapping> MappingsArray, struct FInputChord NewKey, enum class E_AxisType AxisType, bool Primary?, struct UObject* __WorldContext, bool AlreadyTake?, struct TArray<struct FInputAxisKeyMapping> NewAxisMapping); // Function BP_Antize.BP_Antize_C.AxisAlreadyThisKeyArray // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void SetMappingsAxis(struct FName MappingName, struct TArray<struct FInputAxisKeyMapping> MappingsArray, enum class E_AxisType AxisType, struct FInputChord NewKey, bool Primary?, struct UObject* __WorldContext, bool KeyAlreadyExist?, struct TArray<struct FInputAxisKeyMapping> NewMappings); // Function BP_Antize.BP_Antize_C.SetMappingsAxis // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void RebindActionMapping(struct FInputActionKeyMapping OldMappingData, struct FInputActionKeyMapping NewMappingData, struct UObject* __WorldContext, bool Success?); // Function BP_Antize.BP_Antize_C.RebindActionMapping // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void RemoveActionMapping(struct FInputActionKeyMapping MappingData, struct UObject* __WorldContext, bool Success?); // Function BP_Antize.BP_Antize_C.RemoveActionMapping // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void CompareActionMappings(struct FInputActionKeyMapping MappingDataOne, struct FInputActionKeyMapping MappingDataTwo, struct UObject* __WorldContext, bool Same?); // Function BP_Antize.BP_Antize_C.CompareActionMappings // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1395fe0
	void CheckActionMappingExist(struct FInputActionKeyMapping MappingData, struct UObject* __WorldContext, bool Exist?); // Function BP_Antize.BP_Antize_C.CheckActionMappingExist // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void CreateNewActionMapping(struct FInputActionKeyMapping MappingData, struct UObject* __WorldContext, bool Success?); // Function BP_Antize.BP_Antize_C.CreateNewActionMapping // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void RefreshMappingsActionArray(struct FName MappingName, struct TArray<struct FInputActionKeyMapping> MappingsArray, struct UObject* __WorldContext); // Function BP_Antize.BP_Antize_C.RefreshMappingsActionArray // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void ActionAlreadyThisKeyArray(struct FName MappingName, struct TArray<struct FInputActionKeyMapping> MappingsArray, struct FInputChord NewKey, bool Primary?, struct UObject* __WorldContext, bool AlreadyTake?, struct TArray<struct FInputActionKeyMapping> NewMappings); // Function BP_Antize.BP_Antize_C.ActionAlreadyThisKeyArray // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void SetMappingsActionArray(struct FName MappingName, struct TArray<struct FInputActionKeyMapping> MappingsArray, struct FInputChord NewKey, bool Primary?, struct UObject* __WorldContext, bool KeyAlreadyExist?, struct TArray<struct FInputActionKeyMapping> NewMappings); // Function BP_Antize.BP_Antize_C.SetMappingsActionArray // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	bool SaveUserSettings(struct FString SlotName, int32_t UserIndex, struct TArray<struct FS_GraphicIndex> GraphicIndex, struct FS_MyControls SaveControls, struct FS_MyAudio MyAudio, struct FS_MyUI MyUI, struct UBP_AntizeSave_C* AntizeSave, struct UObject* __WorldContext); // Function BP_Antize.BP_Antize_C.SaveUserSettings // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
	void GetCorrectIndex(int32_t In, struct UObject* __WorldContext, int32_t Out); // Function BP_Antize.BP_Antize_C.GetCorrectIndex // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1395fe0
	void ConvertStringToFloat(struct FString In, struct UObject* __WorldContext, float Out); // Function BP_Antize.BP_Antize_C.ConvertStringToFloat // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1395fe0
	void LoadUserSettings(struct FString SlotName, int32_t UserIndex, struct UObject* __WorldContext, struct UBP_AntizeSave_C* AntizeSave); // Function BP_Antize.BP_Antize_C.LoadUserSettings // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1395fe0
};

